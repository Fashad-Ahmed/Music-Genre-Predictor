# -*- coding: utf-8 -*-
"""music_predictor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RIekbqmFqRx8tMyYoWTlf8dFoda3nQaS
"""

# import the data
# clean it
# split data into train and test data
# create a model
# train a model
# make predictions
# evaluate and improve

import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.externals import joblib
from sklearn import tree

music_data = pd.read_csv('music.csv')
music_data

X = music_data.drop(columns=['genre'])
Y = music_data['genre']
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2) #20% data to test

# USING DECISION TREE FOR LEARNING & PREDICTION

# 1 for male , 0 for female

model = DecisionTreeClassifier()
model.fit(X_train, Y_train)
# predictions = model.predict(X_test)
# score = accuracy_score(Y_test, predictions)
# score

# joblib.dump(model, 'music-recommender.joblib')
model1 = joblib.load('music-recommender.joblib')
predictions = model1.predict([[21,1]])
predictions

tree.export_graphviz(model, 
                     out_file='music-recommender.dot', 
                     feature_names=['age','gender'],
                     class_names=sorted(Y.unique()),
                     label='all',
                     rounded=True,
                     filled=True,)

